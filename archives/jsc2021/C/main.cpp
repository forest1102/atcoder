#include <bits/stdc++.h>
using namespace std;
template < typename F > void each_divisor(const long long &N, const F &f) {
    for(long long i = 1; i * i <= N; ++i) {
        if(N % i == 0) {
            f(i);
            // 重複しないならば i の相方である N/i も push
            if(N / i != i)
                f(N / i);
        }
    }
    // 小さい順に並び替える
}

void solve(long long A, long long B) {
    long long res = 0;
    for(long long x = A; x < B; ++x) {
        each_divisor(x, [&](const long long &n) {
            if(x + n <= B) {
                res = max(res, n);
            }
        });
    }
    cout << res << endl;
}

// Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips:
// You use the default template now. You can remove this line by using your
// custom template)
int main() {
    long long A;
    scanf("%lld", &A);
    long long B;
    scanf("%lld", &B);
    solve(A, B);
    return 0;
}
